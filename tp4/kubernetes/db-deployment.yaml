apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker/docker-compose.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: USERNAME
              valueFrom:
                configMapKeyRef:
                  name: credential
                  key: USERNAME
            - name: PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: credential
                  key: PASSWORD
            - name: HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: credential
                  key: HOSTNAME
            - name: DATABASE
              valueFrom:
                configMapKeyRef:
                  name: credential
                  key: DATABASE
            - name: MYSQL_RANDOM_ROOT_PASSWORD
              value: "1"
          image: mysql:5.7
          name: db
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: db
      restartPolicy: Always
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: db
status: {}
